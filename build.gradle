group 'grpc-kotlin-springboot'
version '1.0-SNAPSHOT'

buildscript {
    ext {
        kotlinVersion = "1.2.21"
        springBootVersion = "2.0.0.RC1"
        gaeVersion = project.hasProperty("gaeversion") ? project.property("gaeversion") : ""
        grpcVersion = '1.9.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("com.google.cloud.tools:appengine-gradle-plugin:+")
        classpath('org.akhikhl.gretty:gretty:+')
        classpath('com.google.protobuf:protobuf-gradle-plugin:+')
    }
}

repositories {
    maven {
        url("https://dl.bintray.com/kotlin/exposed/")
    }
    maven {
        url("https://maven-central.storage.googleapis.com")
    }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
    jcenter()
    mavenLocal()
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.google.cloud.tools.appengine"
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'
apply plugin: 'com.google.protobuf'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    compile "javax.servlet:javax.servlet-api:3.1.0"

    compile("org.springframework.boot:spring-boot-starter-web"){
        exclude module: "spring-boot-starter-tomcat"
    }
    providedRuntime 'org.springframework.boot:spring-boot-starter-jetty'

    compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
    compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")

    compile("com.fasterxml.jackson.module:jackson-module-kotlin:2.9.3")

    compile("com.google.appengine:appengine:+")
    compile("com.google.appengine:appengine-api-1.0-sdk:+")

    compile('org.lognet:grpc-spring-boot-starter:+')

    compile("io.grpc:grpc-core:${grpcVersion}")
    compile("io.grpc:grpc-services:${grpcVersion}")
    compile("io.grpc:grpc-netty:${grpcVersion}")
    compile("io.grpc:grpc-protobuf:${grpcVersion}")
    compile("io.grpc:grpc-stub:${grpcVersion}")

    testCompile("junit:junit:4.12")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

// Gretty
gretty {
    servletContainer = 'jetty9.4'
    contextPath = "/"
}

// GAE
appengine {
    deploy {
        version = gaeVersion
    }
}

// grpc
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {
                // To generate deprecated interfaces and static bindService method,
                // turn the enable_deprecated option to true below:
                option 'enable_deprecated=false'
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}
